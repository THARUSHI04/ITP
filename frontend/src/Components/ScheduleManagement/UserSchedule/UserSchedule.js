import axios from "axios";
import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import jsPDF from "jspdf";
import "./UserSchedule.css";

function UserSchedule({ userId }) {
  const [schedule, setSchedule] = useState(null);
  const [loading, setLoading] = useState(true);
  const navigate = useNavigate();

  useEffect(() => {
    if (!userId) return;

    axios
      .get(`http://localhost:5000/user-schedule-creations/user/${userId}`)
      .then((res) => {
        setSchedule(res.data.creation);
        setLoading(false);
      })
      .catch((err) => {
        if (err.response && err.response.status === 404) {
          setSchedule(null);
        }
        setLoading(false);
      });
  }, [userId]);

  const handleDownloadPDF = () => {
    if (!schedule) return;

    const doc = new jsPDF();

    const pageWidth = doc.internal.pageSize.getWidth();

    // Card-like background
    doc.setFillColor(245, 245, 245);
    doc.roundedRect(10, 15, 190, 250, 10, 10, 'F');

    // Upper-right "PDF" badge
    const badgeWidth = 25;
    const badgeHeight = 12;
    doc.setFillColor(229, 9, 20);
    doc.rect(pageWidth - badgeWidth - 10, 20, badgeWidth, badgeHeight, 'F');

    doc.setFontSize(10);
    doc.setTextColor(255, 255, 255);
    doc.setFont("helvetica", "bold");
    doc.text("PDF", pageWidth - badgeWidth - 10 + badgeWidth / 2, 20 + badgeHeight - 3, { align: "center" });

    // Title
    doc.setFontSize(18);
    doc.setTextColor(229, 9, 20);
    doc.setFont("helvetica", "bold");
    doc.text("My Gym Schedule", 20, 30);

    // User info
    doc.setFontSize(12);
    doc.setTextColor(0, 0, 0);
    doc.setFont("helvetica", "normal");
    doc.text(`User: ${schedule.userName}`, 20, 45);
    doc.text(`Time Slot: ${schedule.timeSlot}`, 20, 55);

    // Schedule details
    doc.setFont("courier", "normal");
    doc.text("Schedule:", 20, 65);
    const splitText = doc.splitTextToSize(schedule.schedule, 170);
    doc.text(splitText, 20, 75);

    // Optional border around schedule
    doc.setDrawColor(0, 0, 0);
    doc.rect(18, 70, 174, splitText.length * 7 + 10);

    // Footer
    doc.setFont("helvetica", "italic");
    doc.setFontSize(10);
    doc.setTextColor(100);
    doc.text(
      "Generated by Your Gym System Â© 2025",
      20,
      doc.internal.pageSize.height - 10
    );

    doc.save(`${schedule.userName}_Schedule.pdf`);
  };

  if (loading) return <p className="loading-text">Loading schedule...</p>;

  return (
    <div className="schedule-page">
      <header className="schedule-header">
        <h1>My Gym Schedule</h1>
      </header>
      <div className="schedule-container">
        <h2></h2>
        {schedule ? (
          <div className="schedule-card">
            <p><strong>User:</strong> {schedule.userName}</p>
            <p><strong>Time Slot:</strong> {schedule.timeSlot}</p>
            <p><strong>Schedule:</strong></p>
            <pre className="schedule-text">{schedule.schedule}</pre>
            <div className="button-group">
              <button
                className="change-request-btn"
                onClick={() =>
                  navigate("/schedule-change-request", {
                    state: { scheduleId: schedule._id, userId },
                  })
                }
              >
                Request for Changes
              </button>
              <button
                className="download-btn"
                onClick={handleDownloadPDF}
              >
                Download as PDF
              </button>
            </div>
          </div>
        ) : (
          <p className="no-schedule">No schedule available</p>
        )}
      </div>
      <footer className="schedule-footer">
        <p>&copy; 2025 Your Gym Name. All rights reserved.</p>
      </footer>
    </div>
  );
}

export default UserSchedule;











// // src/Components/ScheduleManagement/UserSchedule/UserSchedule.js
// import axios from "axios";
// import { useEffect, useState } from "react";
// import { useNavigate } from "react-router-dom";
// import jsPDF from "jspdf"; // âœ… Import jsPDF
// import "./UserSchedule.css";

// function UserSchedule({ userId }) {
//   const [schedule, setSchedule] = useState(null);
//   const [loading, setLoading] = useState(true);
//   const navigate = useNavigate();

//   useEffect(() => {
//     if (!userId) return;

//     axios
//       .get(`http://localhost:5000/user-schedule-creations/user/${userId}`)
//       .then((res) => {
//         setSchedule(res.data.creation);
//         setLoading(false);
//       })
//       .catch((err) => {
//         if (err.response && err.response.status === 404) {
//           setSchedule(null);
//         }
//         setLoading(false);
//       });
//   }, [userId]);

//   // âœ… PDF generation function matching the card style
//   const handleDownloadPDF = () => {
//   if (!schedule) return;

//   const doc = new jsPDF();

//   const pageWidth = doc.internal.pageSize.getWidth();

//   // Card-like background
//   doc.setFillColor(245, 245, 245);
//   doc.roundedRect(10, 15, 190, 250, 10, 10, 'F');

//   // Upper-right "PDF" badge
//   const badgeWidth = 25;
//   const badgeHeight = 12;
//   doc.setFillColor(229, 9, 20); // red background
//   doc.rect(pageWidth - badgeWidth - 10, 20, badgeWidth, badgeHeight, 'F');

//   doc.setFontSize(10);
//   doc.setTextColor(255, 255, 255); // white text inside red badge
//   doc.setFont("helvetica", "bold");
//   doc.text("PDF", pageWidth - badgeWidth - 10 + badgeWidth / 2, 20 + badgeHeight - 3, { align: "center" });

//   // Title
//   doc.setFontSize(18);
//   doc.setTextColor(229, 9, 20);
//   doc.setFont("helvetica", "bold");
//   doc.text("My Gym Schedule", 20, 30);

//   // User info
//   doc.setFontSize(12);
//   doc.setTextColor(0, 0, 0);
//   doc.setFont("helvetica", "normal");
//   doc.text(`User: ${schedule.userName}`, 20, 45);
//   doc.text(`Time Slot: ${schedule.timeSlot}`, 20, 55);

//   // Schedule details
//   doc.setFont("courier", "normal");
//   doc.text("Schedule:", 20, 65);
//   const splitText = doc.splitTextToSize(schedule.schedule, 170);
//   doc.text(splitText, 20, 75);

//   // Optional border around schedule
//   doc.setDrawColor(0, 0, 0);
//   doc.rect(18, 70, 174, splitText.length * 7 + 10);

//   // Footer
//   doc.setFont("helvetica", "italic");
//   doc.setFontSize(10);
//   doc.setTextColor(100);
//   doc.text(
//     "Generated by Your Gym System Â© 2025",
//     20,
//     doc.internal.pageSize.height - 10
//   );

//   doc.save(`${schedule.userName}_Schedule.pdf`);
// };


//   if (loading) return <p className="loading-text">Loading schedule...</p>;

//   return (
//     <div className="schedule-page">
//       <header className="schedule-header">
//         <h1>My Gym Schedule</h1>
//       </header>
//       <div className="schedule-container">
//         <h2>ðŸ“… My Schedule</h2>
//         {schedule ? (
//           <div className="schedule-card">
//             <p><strong>User:</strong> {schedule.userName}</p>
//             <p><strong>Time Slot:</strong> {schedule.timeSlot}</p>
//             <p><strong>Schedule:</strong></p>
//             <pre className="schedule-text">{schedule.schedule}</pre>

//             <div className="button-group">
//               <button
//                 className="change-request-btn"
//                 onClick={() =>
//                   navigate("/schedule-change-request", {
//                     state: { scheduleId: schedule._id, userId },
//                   })
//                 }
//               >
//                 Request for Changes
//               </button>

//               {/* âœ… Download PDF Button */}
//               <button
//                 className="download-btn"
//                 onClick={handleDownloadPDF}
//               >
//                 Download as PDF
//               </button>
//             </div>
//           </div>
//         ) : (
//           <p className="no-schedule">No schedule available</p>
//         )}
//       </div>
//       <footer className="schedule-footer">
//         <p>&copy; 2025 Your Gym Name. All rights reserved.</p>
//       </footer>
//     </div>
//   );
// }

// export default UserSchedule;
